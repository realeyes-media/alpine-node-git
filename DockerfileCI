FROM quay.io/realeyes/alpine-node-git:master

ENV CHGLOG_VERSION 0.7.1
ENV HUGO_VERSION 0.54.0
ENV CLOUD_SDK_VERSION=234.0.0
ENV FLARECTL_VERSION=0.8.5
ENV GOFISH_VERSION=0.10.0
ENV KUBECTL_VERSION=1.13.4
ENV HELM_VERSION=2.13.0
ENV YQ_VERSION=2.2.1
ENV RANCHER_VERSION=2.2.0
ENV RCLONE_VERSION=1.47.0

# Add that CI candy!
RUN apk add --update \
    curl wget zip bash sudo && \
    rm -rf /tmp/* /var/cache/apk/*

# Install https://github.com/git-chglog
WORKDIR /temp
RUN wget https://github.com/git-chglog/git-chglog/releases/download/${CHGLOG_VERSION}/git-chglog_linux_amd64 && \
    mv git-chglog_linux_amd64 /usr/local/bin/git-chglog && \
    chmod +x /usr/local/bin/git-chglog

# Install GoFish Package Manager, Helm and Kubectl
COPY gofishinstall.sh install.sh
RUN chmod +x install.sh && \
    ./install.sh && \
    rm -f install.sh && \
    gofish init && \
    gofish install kubectl && \
    gofish install helm

# Install CloudFlare FlareCTL
RUN wget https://github.com/cloudflare/cloudflare-go/releases/download/v${FLARECTL_VERSION}/flarectl.linux.amd64 && \
    mv flarectl.linux.amd64 /usr/local/bin/flarectl && \
    chmod +x /usr/local/bin/flarectl

# Install Hugo SSG
RUN wget https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_Linux-64bit.tar.gz && \
    tar -xvzf hugo_extended_${HUGO_VERSION}_Linux-64bit.tar.gz && \
    mv hugo /usr/local/bin/hugo && \
    chmod +x /usr/local/bin/hugo

# Install YQ
RUN wget https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64 && \
    mv yq_linux_amd64 /usr/local/bin/yq && \
    chmod +x /usr/local/bin/yq

# Install AWS CLI
RUN apk -v --update add \
        python \
        py-pip \
        groff \
        less \
        mailcap \
        curl \
        git \
        && \
    pip install --upgrade awscli s3cmd python-magic && \
    apk -v --purge del py-pip && \
    rm /var/cache/apk/*

# Add GCloud SDK
WORKDIR /
ENV PATH /google-cloud-sdk/bin:$PATH
RUN apk --no-cache add \
        curl \
        python \
        py-crcmod \
        bash \
        libc6-compat \
        openssh-client \
        git \
        gnupg \
    && curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz && \
    tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz && \
    rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz && \
    ln -s /lib /lib64 && \
    gcloud config set core/disable_usage_reporting true && \
    gcloud config set component_manager/disable_update_check true && \
    gcloud config set metrics/environment github_docker_image && \
    gcloud --version

# Installing Helm and Kubectl
RUN gofish install kubectl && \
    gofish install helm

# Install Rancher CLI
RUN wget https://github.com/rancher/cli/releases/download/v${RANCHER_VERSION}/rancher-linux-amd64-v${RANCHER_VERSION}.tar.gz && \
    tar -zxvf rancher-linux-amd64-v${RANCHER_VERSION}.tar.gz && \
    mv rancher-v${RANCHER_VERSION}/rancher /usr/local/bin/rancher && \
    chmod +x /usr/local/bin/rancher

# Install RClone
RUN wget https://github.com/ncw/rclone/releases/download/v1.47.0/rclone-v${RCLONE_VERSION}-linux-amd64.zip && \
    unzip rclone-v${RCLONE_VERSION}-linux-amd64.zip && \
    mv rclone-v${RCLONE_VERSION}-linux-amd64/rclone /usr/local/bin/rclone && \
    chmod +x /usr/local/bin/rclone && \
    rm -rf rclone-v${RCLONE_VERSION}-linux-amd64 && \
    rm -rf rclone-v${RCLONE_VERSION}-linux-amd64.zip
RUN mkdir -p /root/.config && mkdir -p /root/.config/rclone

WORKDIR /build

RUN rm -rf temp

CMD ["/bin/bash"]
